package com.proyecto1.gui;

import com.proyecto1.containers.Graph;
import com.proyecto1.containers.Vector;
import com.proyecto1.models.Edge;
import com.proyecto1.models.Warehouse;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

// @author andresbucarello

public class AgregarRuta extends javax.swing.JPanel {
    
    Vector<Warehouse> almacenes;
    Warehouse almacenSeleccionadoW;
    Warehouse almacenNuevo=new Warehouse("");
    DefaultListModel<String> disponibles = new DefaultListModel<>();
    DefaultListModel<String> agregadas = new DefaultListModel<>();
    
    
    /**
     * Creates new form AgregarRuta
     */
    public AgregarRuta() {
        initComponents();
        
        rutasDisponibles.setModel(disponibles);
        rutasAgregadas.setModel(agregadas);
        almacenes= Graph.getInstance().warehouses;
        cargarCombo(listaAlmacenes);
        
    }
    
    private Warehouse buscarWearhouse(Vector<Warehouse> almacenes, String nombre){
        for (Warehouse almacen : almacenes) {
            if(nombre.equals(almacen.name)){
                return almacen;    
            }
        }
        return null;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titulo1 = new javax.swing.JLabel();
        titulo2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        titulo3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        rutasDisponibles = new javax.swing.JList<>();
        botonAgregar = new javax.swing.JButton();
        titulo4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        rutasAgregadas = new javax.swing.JList<>();
        listaAlmacenes = new javax.swing.JComboBox<>();

        setMaximumSize(new java.awt.Dimension(970, 720));
        setMinimumSize(new java.awt.Dimension(970, 720));
        setPreferredSize(new java.awt.Dimension(970, 720));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        titulo1.setFont(new java.awt.Font("Silom", 0, 65)); // NOI18N
        titulo1.setText("AGREGAR RUTA");
        add(titulo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 10, -1, -1));

        titulo2.setFont(new java.awt.Font("Silom", 1, 24)); // NOI18N
        titulo2.setText("SELECCIONE EL ALMACEN :");
        add(titulo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 330, -1));

        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 900, 10));

        titulo3.setFont(new java.awt.Font("Silom", 1, 24)); // NOI18N
        titulo3.setText("RUTAS DISPONIBLES");
        add(titulo3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, 330, 30));

        rutasDisponibles.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        rutasDisponibles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rutasDisponiblesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(rutasDisponibles);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, 400, 420));

        botonAgregar.setFont(new java.awt.Font("Silom", 0, 14)); // NOI18N
        botonAgregar.setText(">>");
        botonAgregar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonAgregar.setEnabled(false);
        botonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarActionPerformed(evt);
            }
        });
        add(botonAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 350, 60, 40));

        titulo4.setFont(new java.awt.Font("Silom", 1, 24)); // NOI18N
        titulo4.setText("RUTAS AGREGADAS");
        add(titulo4, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 220, 220, 30));

        rutasAgregadas.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(rutasAgregadas);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 250, 400, 420));

        listaAlmacenes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        listaAlmacenes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaAlmacenesActionPerformed(evt);
            }
        });
        add(listaAlmacenes, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 140, 570, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void botonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarActionPerformed
        boolean comprobado=false;
        do{
            String x=JOptionPane.showInputDialog(null, " INGRESE LA DISTANCIA CON EL ALMACEN " + rutasDisponibles.getSelectedValue());
            try{
                int distancia=Integer.parseInt(x);
                String almacenVecino=rutasDisponibles.getSelectedValue(); // Recupera el nombre del almacen seleccionado
                
                Warehouse almacenVecinoW = buscarWearhouse(almacenes,almacenVecino); // Obtiene el objeto almacen apartir del nombre
                
                Edge edge=new Edge(almacenVecinoW,distancia);
                almacenSeleccionadoW.edges.pushBack(edge);

                Graph.getInstance().needsSave = true;
                
                agregadas.addElement(rutasDisponibles.getSelectedValue() + " --> Distancia: " + distancia);
                disponibles.remove(rutasDisponibles.getSelectedIndex());
                
                if(disponibles.getSize()==0){
                    rutasDisponibles.setEnabled(false);
                }
                botonAgregar.setEnabled(false);
                comprobado=true;
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, " ERROR!! LA DISTANCIA INGRESADA NO ES VALIDA ");
            }   
        }while(!comprobado);
    }//GEN-LAST:event_botonAgregarActionPerformed

    private void botonRetroceder1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRetroceder1ActionPerformed

    }//GEN-LAST:event_botonRetroceder1ActionPerformed

    private void listaAlmacenesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaAlmacenesActionPerformed
        String almacenSeleccionado=listaAlmacenes.getSelectedItem().toString();
        almacenSeleccionadoW=buscarWearhouse(almacenes, almacenSeleccionado);
        disponibles.clear();
        agregadas.clear();
        
        for (Warehouse almacen : almacenes) {
            boolean encontrado=false;
            for (Edge arista : almacenSeleccionadoW.edges) {
                if(almacen.name.equalsIgnoreCase(arista.nextWarehouse.name)){
                    encontrado=true;
                }
            }
            if(!encontrado && !almacen.name.equalsIgnoreCase(almacenSeleccionadoW.name)){
                disponibles.addElement(almacen.name);
            }
        }
        if(disponibles.isEmpty()){
            JOptionPane.showMessageDialog(null, " ERROR! ESTE ALMACEN YA ALCANZO EL MAXIMO DE RUTAS : ");
                    
        }
    }//GEN-LAST:event_listaAlmacenesActionPerformed

    private void rutasDisponiblesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rutasDisponiblesMouseClicked
        int index= rutasDisponibles.getSelectedIndex();
        if (index != -1) {
            botonAgregar.setEnabled(true);
        } 
    }//GEN-LAST:event_rutasDisponiblesMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAgregar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JComboBox<String> listaAlmacenes;
    private javax.swing.JList<String> rutasAgregadas;
    private javax.swing.JList<String> rutasDisponibles;
    private javax.swing.JLabel titulo1;
    private javax.swing.JLabel titulo2;
    private javax.swing.JLabel titulo3;
    private javax.swing.JLabel titulo4;
    // End of variables declaration//GEN-END:variables

    private void cargarCombo(JComboBox c) {
        DefaultComboBoxModel<String> dispo = new DefaultComboBoxModel();
        c.setModel(dispo);
        for (Warehouse almacen: almacenes) {
            dispo.addElement(almacen.name);
        }
    }
}
